"""Add timezone to schedule times

Revision ID: add_timezone_to_schedule_times
Revises: change_train_id_to_varchar
Create Date: 2025-09-12 14:30:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'add_timezone_to_schedule_times'
down_revision = 'change_train_id_to_varchar'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TABLE schedules ALTER COLUMN planned_time TYPE TIMESTAMP WITH TIME ZONE USING planned_time AT TIME ZONE 'Asia/Kolkata'")
    op.execute("ALTER TABLE schedules ALTER COLUMN optimized_time TYPE TIMESTAMP WITH TIME ZONE USING optimized_time AT TIME ZONE 'Asia/Kolkata'")
    op.execute("ALTER TABLE schedules ALTER COLUMN created_at TYPE TIMESTAMP WITH TIME ZONE USING created_at AT TIME ZONE 'Asia/Kolkata'")
    op.execute("ALTER TABLE schedules ALTER COLUMN updated_at TYPE TIMESTAMP WITH TIME ZONE USING updated_at AT TIME ZONE 'Asia/Kolkata'")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('schedules', 'updated_at',
                existing_type=sa.DateTime(timezone=True),
                type_=sa.TIMESTAMP(),
                existing_nullable=True)
    op.alter_column('schedules', 'created_at',
                existing_type=sa.DateTime(timezone=True),
                type_=sa.TIMESTAMP(),
                existing_nullable=False)
    op.alter_column('schedules', 'optimized_time',
                existing_type=sa.DateTime(timezone=True),
                type_=sa.TIMESTAMP(),
                existing_nullable=False)
    op.alter_column('schedules', 'planned_time',
                existing_type=sa.DateTime(timezone=True),
                type_=sa.TIMESTAMP(),
                existing_nullable=False)
    # ### end Alembic commands ###